from sklearn.neighbors import NearestNeighborsfrom sklearn.cluster import AgglomerativeClusteringimport numpy as npimport timedef splitmerge_knn_cluster(X, k=10, distance_threshold=0.5):    start = time.time()    # Step 1: Build kNN graph    nbrs = NearestNeighbors(n_neighbors=k, algorithm='auto').fit(X)    knn_graph = nbrs.kneighbors_graph(X).toarray()    # Step 2: Cluster using graph structure (simple: number of connected neighbors)    degrees = knn_graph.sum(axis=1)    split = degrees < np.median(degrees)    # Step 3: Agglomerate small clusters (merge)    merge_model = AgglomerativeClustering(n_clusters=None, distance_threshold=distance_threshold)    y_pred = merge_model.fit_predict(X)    end = time.time()    return y_pred, start, end