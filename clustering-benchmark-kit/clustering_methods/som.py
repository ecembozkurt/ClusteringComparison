from minisom import MiniSomimport numpy as npimport timedef som_cluster(X, grid_size=10):    start = time.time()    som = MiniSom(grid_size, grid_size, X.shape[1], sigma=1.0, learning_rate=0.5, random_seed=42)    som.train_batch(X, num_iteration=100)    # Assign each data point to its BMU (best matching unit)    bmus = np.array([som.winner(x) for x in X])    y_pred = bmus[:, 0] * grid_size + bmus[:, 1]  # Flatten 2D BMU positions into cluster labels    end = time.time()    return y_pred, start, end